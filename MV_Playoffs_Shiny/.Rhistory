shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
history <- fread("MV_predictions_history")
library(data.table)
history <- fread("MV_predictions_history")
View(history)
shiny::runApp()
runApp()
0:11
runApp()
runApp()
c(0)*12
c(0,0,0,0,0,0,0,0,0,0,0,0,0)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
history <- fread("MV_predictions_history_2019.csv")
View(history)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
shiny::runApp()
runApp()
runApp()
library(data.table)
WEEK = 1
LEAGUE = 'MV'
history <- fread(paste0(LEAGUE,"_predictions_history_2019.csv"))
View(history)
shiny::runApp()
runApp()
runApp()
C(0.5,.1)*6
c(0.5,.1)*6
rep_len(c(0.5,.1),12)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
list(className = 'dt-center', targets = 1:6)
list( list(className = 'dt-center', targets = 1:6) )
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nrow(history)
View(history)
unique(Owner)
unique(history$Owner)
length(unique(history$Owner))
shiny::runApp()
history <- fread(paste0(LEAGUE,"_predictions_history_2019.csv"))
WEEK = 1
LEAGUE = 'MV'
library(shiny)
library(DT)
library(data.table)
library(tibble)
library(scales)
library(dplyr)
library(plotly)
library(tidyr)
ui <- fluidPage(
# Application title
titlePanel(h1("Takes 12 To Tango 2019 Playoff Predictions", align = 'center')),
# Show a plot of the generated distribution
mainPanel(h3("How these predictions work:", align = 'center'),
h6("I gather preseason point projections for each player from fantasyfootballanlytics.net, who claim
to have the most accurate projections. From these player projections, I project the points per game (proj_ppg) for each team
in our league. I model each team's score each remaining week as a normal distribution with their
proj_ppg as the mean and 30 (arbitrary) as the standard deviation. Then I similate the rest of the
season 30,000 times to determine how far each team is likely to go.", align = 'center'),
tabsetPanel(
tabPanel("Current Prediction", div(DT::dataTableOutput("preds2019"),
style = "font-size: 80%; width: 10%"
)
),
tabPanel("Prediction History", plotOutput("Historyplot"))
)
#,
#plotOutput("predshistoryplot")
)
)
history <- fread(paste0(LEAGUE,"_predictions_history_2019.csv"))
View(history)
runApp()
history <- history %>% select(Week, Playoffs, Owner) %>%
mutate(Playoffs = Playoffs*100)
p <- ggplot(history,aes(x=Week, y=Playoffs, group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(Owner))), aes(label=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
scale_y_continuous(name = 'Playoffs %', limits = c(0,100)) +
theme(legend.position = "none")
p <- ggplot(history,aes(x=Week, y=Playoffs, group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))), aes(label=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
scale_y_continuous(name = 'Playoffs %', limits = c(0,100)) +
theme(legend.position = "none")
runApp()
runApp()
runApp()
LEAGUE <- 'MV'
df <- fread(paste0(LEAGUE,"_predictions_history_2019.csv"))
library(shiny)
library(DT)
library(data.table)
library(tibble)
library(scales)
library(dplyr)
library(plotly)
library(tidyr)
LEAGUE <- 'MV'
df <- fread(paste0(LEAGUE,"_predictions_history_2019.csv"))
WEEK <- max(df$Week)
WEEK
runApp()
View(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
var_to_p = Playoffs
var_to_p = 'Playoffs'
get(var_to_p)
history <- df %>% select(Week, var_to_plot, Owner) %>%
mutate(var_to_plot = var_to_plot*100) %>%
arrange(desc(Week)) %>%
arrange(desc(var_to_plot))
history <- df %>% select(Week, var_to_plot, Owner) %>%
mutate(var_to_plot = get(var_to_plot)*100) %>%
arrange(desc(Week)) %>%
arrange(desc(var_to_plot))
history <- df %>% select(Week, get(var_to_plot), Owner) %>%
mutate(var_to_plot = get(var_to_plot)*100) %>%
arrange(desc(Week)) %>%
arrange(desc(get(var_to_plot)))
var_to_plot <- 'Playoffs'
history <- df %>% select(Week, get(var_to_plot), Owner) %>%
mutate(var_to_plot = get(var_to_plot)*100) %>%
arrange(desc(Week)) %>%
arrange(desc(get(var_to_plot)))
get(var_to_plot)
history <- df %>% select(Week, var_to_plot, Owner) %>%
mutate(var_to_plot = var_to_plot*100) %>%
arrange(desc(Week)) %>%
arrange(desc(var_to_plot))
history <- df %>% select(Week, var_to_plot, Owner)
View(history)
history <- df %>% select(Week, var_to_plot, Owner) %>%
mutate(var_to_plot = var_to_plot*100)
history <- df %>% select(Week, var_to_plot, Owner) %>%
mutate(var_to_plot = df[var_to_plot]*100)
history <- df %>% select(Week, var_to_plot, Owner) %>%
mutate(!!var_to_plot := var_to_plot*100)
history <- df %>% select(Week, var_to_plot, Owner) %>%
mutate(!!var_to_plot := !!var_to_plot*100)
history[3]
history[:3]
history[,3]
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arrange(desc(var_to_plot))
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week))
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arrange(desc(var_to_plot))
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arrange(desc(3))
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arrange(desc(df[,3]))
df[,3]
as.array(df[,3])
array(df[,3])
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arrange(desc(array(df[,3])))
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arrange(desc(.[[3]]))
View(history)
get(var_to_plot)
var_to_plot[0]
var_to_plot[1]
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arange(desc(var_to_plot[1]))
history <- df %>% select(Week, Owner, var_to_plot) %>%
arrange(desc(Week)) %>%
arrange(desc(var_to_plot[1]))
p <- ggplot(history,aes(x=Week, y=var_to_plot, group=Owner), show.legend = FALSE)
p <- ggplot(history,aes(x=Week, y=var_to_plot, group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y=var_to_plot, group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y=var_to_plot[1], group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y=histoy[var_to_plot], group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y=histroy[var_to_plot], group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p <- ggplot(history,aes(x=Week, y=history[var_to_plot], group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y:=!!var_to_plot, group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y=!!var_to_plot, group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y=.[[3]], group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes(x=Week, y=[[3]], group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p <- ggplot(history,aes(x=Week, y=[3], group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p <- ggplot(history,aes(x=Week, y=3, group=Owner), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes_string(x='Week', y=var_to_plot, group='Owner'), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
#scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
p <- ggplot(history,aes_string(x='Week', y=var_to_plot, group='Owner'), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
View(history)
history[,3] <- history[,3]*100
View(history)
p <- ggplot(history,aes_string(x='Week', y=var_to_plot, group='Owner'), show.legend = FALSE) +
geom_line(aes(color=Owner)) +
geom_point(aes(color=Owner)) +
theme_minimal() +
geom_text(data=subset(history, Week == max(Week)),
hjust = 0, nudge_x = rep_len(c(0.03,.2),length(unique(history$Owner))),
aes(label=Owner, color=Owner)) +
scale_x_continuous(limits = c(0,WEEK+0.5), breaks=0:WEEK, labels=waiver()) +
scale_y_continuous(name = paste(var_to_plot,'%'), limits = c(0,100)) +
theme(legend.position = "none")
p
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp('~/Desktop/Life/Fantasy-Football/VL_Playoffs_Shiny')
